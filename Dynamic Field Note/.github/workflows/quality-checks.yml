# GitHub Actions ワークフロー
# 静的解析・品質チェックの自動化

name: Code Quality Checks

# トリガー設定
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  schedule:
    # 毎週月曜 9:00 JST (00:00 UTC)
    - cron: '0 0 * * 1'

# 権限設定
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  # TypeScript 型チェック
  typescript-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript type check
        run: |
          npm run type-check
          npx tsc --noEmit --noUnusedLocals --noUnusedParameters

  # ESLint チェック
  eslint-check:
    name: ESLint Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint -- --max-warnings 0

  # Prettier チェック
  prettier-check:
    name: Prettier Format Check
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Prettier check
        run: npm run format:check

  # 循環依存チェック
  circular-dependencies:
    name: Circular Dependencies Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check circular dependencies
        run: npx madge --circular --extensions ts,tsx src/

  # 未使用コード検出
  unused-code:
    name: Unused Code Detection
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Detect unused exports
        run: npx ts-prune --error || true

      - name: Check unused dependencies
        run: npx depcheck || true

  # セキュリティ監査
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        continue-on-error: true

      - name: Create security report
        if: failure()
        run: |
          echo "# Security Vulnerabilities Detected" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          npm audit --json > audit.json
          echo '```json' >> $GITHUB_STEP_SUMMARY
          cat audit.json >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  # E2Eスモークテスト (最小限のCI/CD用テスト)
  e2e-smoke-tests:
    name: E2E Smoke Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run smoke tests
        run: npm run test:ci

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-results
          path: |
            coverage/
            junit.xml
          retention-days: 7

  # 全チェック完了通知
  all-checks-complete:
    name: All Checks Complete
    runs-on: ubuntu-latest
    needs:
      - typescript-check
      - eslint-check
      - prettier-check
      - circular-dependencies
      - unused-code
      - security-audit
      - e2e-smoke-tests
    if: always()

    steps:
      - name: Check all jobs status
        run: |
          if [ "${{ needs.typescript-check.result }}" != "success" ] || \
             [ "${{ needs.eslint-check.result }}" != "success" ] || \
             [ "${{ needs.prettier-check.result }}" != "success" ] || \
             [ "${{ needs.circular-dependencies.result }}" != "success" ] || \
             [ "${{ needs.e2e-smoke-tests.result }}" != "success" ]; then
            echo "❌ Some quality checks failed"
            exit 1
          else
            echo "✅ All quality checks passed!"
          fi

      - name: Summary
        if: always()
        run: |
          echo "## Quality Checks Summary 📊" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| TypeScript | ${{ needs.typescript-check.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| ESLint | ${{ needs.eslint-check.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Prettier | ${{ needs.prettier-check.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Circular Deps | ${{ needs.circular-dependencies.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Unused Code | ${{ needs.unused-code.result == 'success' && '✅' || '⚠️' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security | ${{ needs.security-audit.result == 'success' && '✅' || '⚠️' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| E2E Smoke Tests | ${{ needs.e2e-smoke-tests.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
